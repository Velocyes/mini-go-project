// Code generated by MockGen. DO NOT EDIT.
// Source: midtrans.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	midtrans "github.com/midtrans/midtrans-go"
	coreapi "github.com/midtrans/midtrans-go/coreapi"
)

// MockMidtrans is a mock of Midtrans interface.
type MockMidtrans struct {
	ctrl     *gomock.Controller
	recorder *MockMidtransMockRecorder
}

// MockMidtransMockRecorder is the mock recorder for MockMidtrans.
type MockMidtransMockRecorder struct {
	mock *MockMidtrans
}

// NewMockMidtrans creates a new mock instance.
func NewMockMidtrans(ctrl *gomock.Controller) *MockMidtrans {
	mock := &MockMidtrans{ctrl: ctrl}
	mock.recorder = &MockMidtransMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMidtrans) EXPECT() *MockMidtransMockRecorder {
	return m.recorder
}

// ChargeTransaction mocks base method.
func (m *MockMidtrans) ChargeTransaction(req *coreapi.ChargeReq) (*coreapi.ChargeResponse, *midtrans.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChargeTransaction", req)
	ret0, _ := ret[0].(*coreapi.ChargeResponse)
	ret1, _ := ret[1].(*midtrans.Error)
	return ret0, ret1
}

// ChargeTransaction indicates an expected call of ChargeTransaction.
func (mr *MockMidtransMockRecorder) ChargeTransaction(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChargeTransaction", reflect.TypeOf((*MockMidtrans)(nil).ChargeTransaction), req)
}

// GetCoreAPIClient mocks base method.
func (m *MockMidtrans) GetCoreAPIClient() *coreapi.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoreAPIClient")
	ret0, _ := ret[0].(*coreapi.Client)
	return ret0
}

// GetCoreAPIClient indicates an expected call of GetCoreAPIClient.
func (mr *MockMidtransMockRecorder) GetCoreAPIClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoreAPIClient", reflect.TypeOf((*MockMidtrans)(nil).GetCoreAPIClient))
}
